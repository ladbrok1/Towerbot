############################
### shop.py - –ú–∞–≥–∞–∑–∏–Ω –∏ –∫—Ä–∞—Ñ—Ç ###
############################
"""
–ú–æ–¥—É–ª—å –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –∫—Ä–∞—Ñ—Ç–∞:
- –ü–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
- –ü—Ä–æ–¥–∞–∂–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
- –ö—Ä–∞—Ñ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤
- –£–ª—É—á—à–µ–Ω–∏–µ –æ—Ä—É–∂–∏—è
- –°–∏—Å—Ç–µ–º–∞ –∫—É–∑–Ω–µ—Ü–∞
"""
import database as db
import world
import player
from telebot import types

def shop_menu(bot, message):
    player_id = message.from_user.id
    player_data = db.load_player(player_id)
    if player_data is None:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return

    shop_text = f"üõí *–ú–∞–≥–∞–∑–∏–Ω –ë–∞—à–Ω–∏*\n–ó–æ–ª–æ—Ç–æ: {player_data['gold']}\n\n*–¢–æ–≤–∞—Ä—ã:*\n"

    markup = types.InlineKeyboardMarkup()
    for item, data in world.shop_items.items():
        item_text = "{} - {}g\n{}".format(
            item.replace("_", " ").title(),
            data["price"],
            data["description"]
        )
        shop_text += item_text + "\n\n"

        markup.add(types.InlineKeyboardButton(
            f"–ö—É–ø–∏—Ç—å {item.replace('_', ' ')} ({data['price']}g)",
            callback_data=f"buy_{item}"
        ))

    markup.add(types.InlineKeyboardButton("–ü—Ä–æ–¥–∞—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç (100g)", callback_data="sell_artifact"))
    markup.add(types.InlineKeyboardButton("üè≠ –ü–æ—Å–µ—Ç–∏—Ç—å –∫—É–∑–Ω–µ—Ü–∞", callback_data="blacksmith"))

    bot.send_message(message.chat.id, shop_text, reply_markup=markup, parse_mode="Markdown")

def buy_item(bot, call):
    player_id = call.from_user.id
    player_data = db.load_player(player_id)
    if player_data is None:
        bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö!")
        return

    item = call.data.split("_")[1]
    item_data = world.shop_items.get(item)

    if not item_data:
        bot.answer_callback_query(call.id, "‚ùå –≠—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è!")
        return

    if player_data["gold"] >= item_data["price"]:
        player_data["gold"] -= item_data["price"]

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–µ–¥–º–µ—Ç–∞
        effect_text = ""
        if item == "health_potion":
            player_data["inventory"].append("health_potion")
            effect_text = "üíâ –ó–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!"
        elif item == "weapon_upgrade":
            weapon = player_data["current_weapon"]
            player_data["weapons"][weapon]["level"] += 1
            effect_text = f"‚ö° {world.weapons_data[weapon]['name']} —É–ª—É—á—à–µ–Ω –¥–æ —É—Ä–æ–≤–Ω—è {player_data['weapons'][weapon]['level']}!"
            player.check_new_skills(bot, player_id, weapon)
        elif item == "armor_upgrade":
            player_data["stats"]["defense"] += 5
            effect_text = f"üõ°Ô∏è –ó–∞—â–∏—Ç–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞ –¥–æ {player_data['stats']['defense']}!"
        elif item == "elixir_strength":
            player_data["inventory"].append("elixir_strength")
            effect_text = "üí™ –≠–ª–∏–∫—Å–∏—Ä —Å–∏–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!"
        elif item == "elixir_agility":
            player_data["inventory"].append("elixir_agility")
            effect_text = "üèÉ –≠–ª–∏–∫—Å–∏—Ä –ª–æ–≤–∫–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!"
        elif item == "elixir_vitality":
            player_data["inventory"].append("elixir_vitality")
            effect_text = "‚ù§Ô∏è –≠–ª–∏–∫—Å–∏—Ä –∂–∏–≤—É—á–µ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!"
        elif item == "elixir_luck":
            player_data["inventory"].append("elixir_luck")
            effect_text = "üçÄ –≠–ª–∏–∫—Å–∏—Ä —É–¥–∞—á–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!"
        elif item == "boss_key":
            player_data["inventory"].append("boss_key")
            effect_text = "üîë –ö–ª—é—á –±–æ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!"
        else:
            effect_text = "‚úÖ –ü—Ä–µ–¥–º–µ—Ç –∫—É–ø–ª–µ–Ω!"

        db.save_player(player_id, player_data)
        bot.answer_callback_query(call.id, effect_text)
        shop_menu(bot, call.message)
    else:
        bot.answer_callback_query(call.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!")

def craft_item(bot, call):
    player_id = call.from_user.id
    player_data = db.load_player(player_id)
    item_id = call.data.split("_")[1]

    # –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
    # –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
    bot.answer_callback_query(call.id, f"üîß –ü—Ä–µ–¥–º–µ—Ç {item_id} —Å–æ–∑–¥–∞–Ω!")
    blacksmith_menu(bot, call.message)

def upgrade_weapon(bot, call):
    player_id = call.from_user.id
    player_data = db.load_player(player_id)
    weapon_type = call.data.split("_")[1]

    if weapon_type not in player_data["weapons"]:
        bot.answer_callback_query(call.id, "‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –æ—Ä—É–∂–∏—è!")
        return

    current_level = player_data["weapons"][weapon_type]["level"]
    upgrade_cost = current_level * 500

    if player_data["gold"] >= upgrade_cost:
        player_data["gold"] -= upgrade_cost
        player_data["weapons"][weapon_type]["level"] += 1

        # –ù–∞—á–∏—Å–ª—è–µ–º —Ç–∞–ª–∞–Ω—Ç-–ø–æ–π–Ω—Ç—ã –∫–∞–∂–¥—ã–µ 5 —É—Ä–æ–≤–Ω–µ–π
        if player_data["weapons"][weapon_type]["level"] % 5 == 0:
            player_data["talent_points"] = player_data.get("talent_points", 0) + 1

        db.save_player(player_id, player_data)
        bot.answer_callback_query(call.id, f"‚ö° –û—Ä—É–∂–∏–µ —É–ª—É—á—à–µ–Ω–æ –¥–æ —É—Ä–æ–≤–Ω—è {player_data['weapons'][weapon_type]['level']}!")
    else:
        bot.answer_callback_query(call.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!")

    blacksmith_menu(bot, call.message)

def blacksmith_menu(bot, message):
    player_id = message.from_user.id
    player_data = db.load_player(player_id)

    if player_data is None:
        return

    markup = types.InlineKeyboardMarkup()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∏–≥—Ä–æ–∫–∞ —á–µ—Ä—Ç–µ–∂–∏
    blueprints = [item for item in player_data["inventory"] if "blueprint" in item]

    if blueprints:
        for bp in blueprints:
            markup.add(types.InlineKeyboardButton(
                f"–°–æ–∑–¥–∞—Ç—å {bp.replace('_', ' ')}",
                callback_data=f"craft_{bp}"
            ))

    # –ö–Ω–æ–ø–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è –æ—Ä—É–∂–∏—è
    weapon = player_data["current_weapon"]
    if weapon:
        weapon_level = player_data["weapons"][weapon]["level"]
        upgrade_cost = weapon_level * 500

        markup.add(types.InlineKeyboardButton(
            f"–£–ª—É—á—à–∏—Ç—å {world.weapons_data[weapon]['name']} (–£—Ä. {weapon_level} ‚Üí {weapon_level+1}) - {upgrade_cost}g",
            callback_data=f"upgrade_{weapon}"
        ))

    markup.add(types.InlineKeyboardButton("–†–∞—Å–ø–ª–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã", callback_data="melt_items"))

    bot.send_message(
        message.chat.id,
        "üî• *–ö—É–∑–Ω–∏—Ü–∞ –ë–∞—à–Ω–∏*\n–ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ª—É—á—à–∞—Ç—å –æ—Ä—É–∂–∏–µ",
        reply_markup=markup,
        parse_mode="Markdown"
    )