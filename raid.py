############################
### raid.py - –ì—Ä—É–ø–ø–æ–≤—ã–µ —Ä–µ–π–¥—ã ###
############################
"""
–ú–æ–¥—É–ª—å –≥—Ä—É–ø–ø–æ–≤—ã—Ö —Ä–µ–π–¥–æ–≤:
- –ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø—ã
- –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
- –†–µ–π–¥—ã –Ω–∞ –±–æ—Å—Å–æ–≤
- –≠–ø–∏—á–µ—Å–∫–∏–µ –±–æ—Å—Å—ã
- –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ–±—ã—á–∏
"""
import random
import database as db
import world
from telebot import types

def attack_boss(bot, message):
    player_id = message.from_user.id
    player_data = db.load_player(player_id)
    if player_data is None:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return

    server_progress = db.get_server_progress()

    if player_data["floor"] != server_progress["current_floor"]:
        bot.send_message(
            message.chat.id,
            f"‚ùå –ë–æ—Å—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ–∫—É—â–µ–º —Å–µ—Ä–≤–µ—Ä–Ω–æ–º —ç—Ç–∞–∂–µ ({server_progress['current_floor']})!\n"
            f"–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ —ç—Ç–∞–∂–µ {player_data['floor']}.",
            parse_mode="Markdown"
        )
        return

    if player_data["state"] != "idle":
        bot.send_message(message.chat.id, "‚ùå –¢—ã —É–∂–µ –≤ –±–æ—é!")
        return

    boss_data = world.bosses_data.get(server_progress["current_floor"], world.bosses_data[1])
    boss = boss_data.copy()
    boss["hp"] = server_progress["boss_hp"]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–µ–µ HP –±–æ—Å—Å–∞

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∏–ª—É –∏–≥—Ä–æ–∫–∞
    if player_data["level"] < boss["min_level"]:
        bot.send_message(
            message.chat.id,
            f"‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ!*\n–ë–æ—Å—Å —Å–ª–∏—à–∫–æ–º —Å–∏–ª–µ–Ω –¥–ª—è —Ç–µ–±—è!\n"
            f"–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: {player_data['level']} | –¢—Ä–µ–±—É–µ—Ç—Å—è: {boss['min_level']}+\n\n"
            "–ù–∞–π–¥–∏ –≥—Ä—É–ø–ø—É –∏–ª–∏ —Å—Ç–∞–Ω—å —Å–∏–ª—å–Ω–µ–µ!",
            parse_mode="Markdown"
        )
        return

    player_data["state"] = "fighting"
    player_data["current_enemy"] = boss
    db.save_player(player_id, player_data)

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±–æ—è
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    weapon = player_data["current_weapon"]
    skills = player_data["weapons"][weapon]["skills"]

    markup.add(f"‚öîÔ∏è –ê—Ç–∞–∫–æ–≤–∞—Ç—å ({world.weapons_data[weapon]['base_skill']})")
    for skill in skills[1:]:
        markup.add(f"üîÆ {skill}")

    if "health_potion" in player_data["inventory"]:
        markup.add("üíâ –ó–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è")

    markup.add("üèÉ –ë–µ–∂–∞—Ç—å")

    floor_desc = world.FLOOR_DESCRIPTIONS.get(player_data["floor"], f"–≠—Ç–∞–∂ {player_data['floor']}")
    bot.send_message(
        message.chat.id,
        f"üëë *–ù–∞ {floor_desc} —Ç—ã –≤—Å—Ç—É–ø–∞–µ—à—å –≤ –±–æ–π —Å {boss['name']}!*\n"
        f"{boss['description']}\n\n"
        f"‚ù§Ô∏è HP: {boss['hp']}/{boss_data['max_hp']} | üí¢ –£—Ä–æ–Ω: {boss['damage']}\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=markup,
        parse_mode="Markdown"
    )

def raid_menu(bot, message):
    player_id = message.from_user.id
    player_data = db.load_player(player_id)

    if not player_data:
        return

    server_progress = db.get_server_progress()
    boss_data = world.bosses_data.get(server_progress["current_floor"], world.bosses_data[1])

    markup = types.InlineKeyboardMarkup()

    # –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ –≥—Ä—É–ø–ø—ã
    markup.add(types.InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ –≥—Ä—É–ø–ø—É", callback_data="find_group"))

    # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
    markup.add(types.InlineKeyboardButton("üë• –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É", callback_data="create_group"))

    # –ö–Ω–æ–ø–∫–∞ –≤—ã–∑–æ–≤–∞ —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –±–æ—Å—Å–∞
    if "boss_key" in player_data["inventory"]:
        markup.add(types.InlineKeyboardButton(
            "üíÄ –í—ã–∑–≤–∞—Ç—å —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –±–æ—Å—Å–∞",
            callback_data="summon_epic_boss"
        ))

    raid_info = (
        f"üëë *–†–µ–π–¥ –Ω–∞ –±–æ—Å—Å–∞ —ç—Ç–∞–∂–∞ {server_progress['current_floor']}*\n"
        f"–ë–æ—Å—Å: {boss_data['name']}\n"
        f"–ó–¥–æ—Ä–æ–≤—å–µ: {server_progress['boss_hp']}/{boss_data['max_hp']}\n\n"
        f"–ì—Ä—É–ø–ø—ã, –∏–¥—É—â–∏–µ –≤ —Ä–µ–π–¥:"
    )

    # TODO: –î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø

    bot.send_message(
        message.chat.id,
        raid_info,
        reply_markup=markup,
        parse_mode="Markdown"
    )

def handle_raid(bot, call):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Ä–µ–π–¥–∞
    action = call.data.split("_")[1]

    if action == "find_group":
        find_group(bot, call)
    elif action == "create_group":
        create_group(bot, call)
    elif action == "summon_epic":
        summon_epic_boss(bot, call)

def find_group(bot, call):
    player_id = call.from_user.id
    player_data = db.load_player(player_id)

    # –ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø
    # ...

    bot.answer_callback_query(call.id, "üîç –ü–æ–∏—Å–∫ –≥—Ä—É–ø–ø—ã...")

def create_group(bot, call):
    player_id = call.from_user.id
    player_data = db.load_player(player_id)

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã
    # ...

    bot.answer_callback_query(call.id, "üë• –ì—Ä—É–ø–ø–∞ —Å–æ–∑–¥–∞–Ω–∞!")

def summon_epic_boss(bot, call):
    player_id = call.from_user.id
    player_data = db.load_player(player_id)

    if "boss_key" not in player_data["inventory"]:
        bot.answer_callback_query(call.id, "‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –∫–ª—é—á–∞ –±–æ—Å—Å–∞!")
        return

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –±–æ—Å—Å–∞
    epic_boss = random.choice(list(world.epic_bosses.values()))

    # –£–±–∏—Ä–∞–µ–º –∫–ª—é—á
    player_data["inventory"].remove("boss_key")
    db.save_player(player_id, player_data)

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–π–¥
    # ...

    bot.answer_callback_query(call.id, f"üíÄ –¢—ã –≤—ã–∑–≤–∞–ª {epic_boss['name']}!")