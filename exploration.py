############################
### exploration.py - –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –º–∏—Ä–∞ ###
############################
"""
–ú–æ–¥—É–ª—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º–∏—Ä–∞:
- –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–π
- –°–ª—É—á–∞–π–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
- –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
- –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏
- –í—Å—Ç—Ä–µ—á–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏
"""
import random
import database as db
import world

def explore(bot, message):
    player_id = message.from_user.id
    player_data = db.load_player(player_id)
    
    if player_data is None:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return
    
    if player_data["state"] != "idle":
        bot.send_message(message.chat.id, "‚ùå –¢—ã —É–∂–µ —á–µ–º-—Ç–æ –∑–∞–Ω—è—Ç!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–∂–µ
    floor = player_data["floor"]
    if floor not in world.exploration_locations or floor > 5:
        # –î–ª—è —ç—Ç–∞–∂–µ–π –≤—ã—à–µ 5 –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞—Ü–∏–∏ 5 —ç—Ç–∞–∂–∞
        floor = min(floor, 5)
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ª–æ–∫–∞—Ü–∏—é
    location = random.choice(world.exploration_locations[floor])
    
    # –®–∞–Ω—Å –Ω–∞–π—Ç–∏ —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É–¥–∞—á–∏
    special_chance = player_data["stats"]["luck"] / 200
    
    # –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
    gold_gain = random.randint(*location["gold"])
    exp_gain = location["exp"]
    
    player_data["gold"] += gold_gain
    player_data["exp"] += exp_gain
    player_data["explored"] = min(100, player_data["explored"] + random.randint(1, 5))
    
    floor_desc = world.FLOOR_DESCRIPTIONS.get(player_data["floor"], f"–≠—Ç–∞–∂ {player_data['floor']}")
    result_text = (
        f"üåç –ù–∞ {floor_desc} —Ç—ã –∏—Å—Å–ª–µ–¥—É–µ—à—å *{location['name']}*\n"
        f"{location['description']}\n\n"
        f"ü™ô –ù–∞—à–µ–ª {gold_gain} –∑–æ–ª–æ—Ç–∞ | üé≤ –ü–æ–ª—É—á–∏–ª {exp_gain} –æ–ø—ã—Ç–∞\n"
        f"üîç –ü—Ä–æ–≥—Ä–µ—Å—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: {player_data['explored']}%"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—à–ª–∏ –ª–∏ —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ
    if "special" in location and random.random() < special_chance:
        special_item = location["special"]
        player_data["inventory"].append(special_item)
        
        if special_item == "skill_scroll":
            result_text += "\n\nüìú –¢—ã –Ω–∞—à–µ–ª –¥—Ä–µ–≤–Ω–∏–π —Å–≤–∏—Ç–æ–∫ —Å –Ω–æ–≤—ã–º –Ω–∞–≤—ã–∫–æ–º!"
            # –î–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –Ω–∞–≤—ã–∫ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –æ—Ä—É–∂–∏—è
            weapon = player_data["current_weapon"]
            new_skill = get_appropriate_skill(player_data, weapon)
            if new_skill:
                player_data["weapons"][weapon]["skills"].append(new_skill)
                result_text += f"\n‚ú® –¢—ã –∏–∑—É—á–∏–ª *{new_skill}*!"
        # ... –¥—Ä—É–≥–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    
    # –®–∞–Ω—Å –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ (15%)
    if random.random() < 0.15:
        online_players = db.get_online_players(player_data["floor"], exclude_id=player_id)
        if online_players:
            other_player = random.choice(online_players)
            result_text += f"\n\nüë• –¢—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –∏–≥—Ä–æ–∫–∞ *{other_player['nickname']}* –≤–æ –≤—Ä–µ–º—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è!"
    
    # –®–∞–Ω—Å –Ω–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–Ω—É—é –ª–æ–∫–∞—Ü–∏—é (5%)
    if random.random() < 0.05:
        secret_location = find_secret_location(player_data["floor"])
        result_text += f"\n\nüîç –¢—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª —Å–µ–∫—Ä–µ—Ç–Ω—É—é –ª–æ–∫–∞—Ü–∏—é: *{secret_location['name']}*!"
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∫–ª—é—á –æ—Ç –ª–æ–∫–∞—Ü–∏–∏
        player_data["inventory"].append(f"key_{secret_location['id']}")
    
    # –®–∞–Ω—Å –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –º–æ–Ω—Å—Ç—Ä–∞ (30%)
    if random.random() < 0.3:
        result_text += "\n\n‚ö†Ô∏è –°—Ä–µ–¥–∏ —Ä—É–∏–Ω —Ç–µ–±—è –∞—Ç–∞–∫—É–µ—Ç –º–æ–Ω—Å—Ç—Ä!"
        db.save_player(player_id, player_data)
        bot.send_message(message.chat.id, result_text, parse_mode="Markdown")
        # –ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –±–æ–π
        # ... (–∫–æ–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –±–æ—è)
    else:
        db.save_player(player_id, player_data)
        bot.send_message(message.chat.id, result_text, parse_mode="Markdown")

def get_appropriate_skill(player_data, weapon_type):
    # ... (–ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞–≤—ã–∫–∞ –∫–∞–∫ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ)
    return new_skill

def find_secret_location(floor):
    secret_locations = {
        1: {"id": 101, "name": "–ü–µ—â–µ—Ä–∞ –°–æ–∫—Ä–æ–≤–∏—â", "min_level": 5},
        2: {"id": 102, "name": "–ó–∞–±—Ä–æ—à–µ–Ω–Ω—ã–π –•—Ä–∞–º", "min_level": 10},
        # ... –¥—Ä—É–≥–∏–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏
    }
    return random.choice(list(secret_locations.values()))