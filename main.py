############################
### main.py - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ ###
############################
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –±–æ—Ç–∞:
- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –ë–î
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
- –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏
"""
import telebot
from telebot import types
import database as db
import player
import world
import combat
import exploration
import shop
import talent
import raid
import pvp
import economy
import guild

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
TOKEN = ""
bot = telebot.TeleBot(TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db.init_db()

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=['start'])
def start(message):
    player.handle_start(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üìä –ü–µ—Ä—Å–æ–Ω–∞–∂")
def show_character(message):
    player.show_character(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
def show_inventory(message):
    player.show_inventory(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "‚öîÔ∏è –ê—Ç–∞–∫–æ–≤–∞—Ç—å –º–æ–±–∞")
def fight_monster(message):
    combat.initiate_combat(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üèÉ‚Äç‚ôÇÔ∏è –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å")
def explore_location(message):
    exploration.explore(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üëë –ê—Ç–∞–∫–æ–≤–∞—Ç—å –±–æ—Å—Å–∞")
def attack_boss(message):
    raid.attack_boss(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üõí –ú–∞–≥–∞–∑–∏–Ω")
def shop_menu(message):
    shop.shop_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üîß –¢–∞–ª–∞–Ω—Ç—ã")
def show_talents(message):
    talent.show_talents(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üë• –†–µ–π–¥—ã")
def raid_menu(message):
    raid.raid_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "‚öîÔ∏è PvP")
def pvp_menu(message):
    pvp.pvp_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üè¶ –≠–∫–æ–Ω–æ–º–∏–∫–∞")
def economy_menu(message):
    economy.economy_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üè∞ –ì–∏–ª—å–¥–∏—è")
def guild_menu(message):
    guild.guild_menu(bot, message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–æ–≤
@bot.callback_query_handler(func=lambda call: True)
def handle_callbacks(call):
    try:
        if call.data.startswith("stat_"):
            player.increase_stat(bot, call)
        
        elif call.data.startswith("use_"):
            player.use_item(bot, call)
        
        elif call.data.startswith("buy_"):
            shop.buy_item(bot, call)
        
        elif call.data == "sell_artifact":
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–¥–∞–∂–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
            player_id = call.from_user.id
            player_data = db.load_player(player_id)
            if player_data and "ancient_artifact" in player_data["inventory"]:
                player_data["inventory"].remove("ancient_artifact")
                player_data["gold"] += 100
                db.save_player(player_id, player_data)
                bot.answer_callback_query(call.id, "üè∫ –¢—ã –ø—Ä–æ–¥–∞–ª –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –∑–∞ 100 –∑–æ–ª–æ—Ç–∞!")
                shop.shop_menu(bot, call.message)
            else:
                bot.answer_callback_query(call.id, "‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏!")
        
        elif call.data == "blacksmith":
            shop.blacksmith_menu(bot, call.message)
        
        elif call.data.startswith("craft_"):
            shop.craft_item(bot, call)
        
        elif call.data.startswith("upgrade_"):
            shop.upgrade_weapon(bot, call)
        
        elif call.data == "melt_items":
            bot.answer_callback_query(call.id, "üî• –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
        
        elif call.data.startswith("learn_"):
            talent.learn_talent(bot, call)
        
        elif call.data == "reset_talents":
            talent.reset_talents(bot, call)
        
        elif call.data == "level_up":
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
            player_id = call.from_user.id
            player_data = db.load_player(player_id)
            if player_data:
                required_exp = player_data['level'] * 100
                if player_data["exp"] >= required_exp:
                    player_data["level"] += 1
                    player_data["exp"] -= required_exp
                    player_data["stats"]["vitality"] += 1
                    player_data["max_hp"] = 80 + player_data["stats"]["vitality"] * 4
                    player_data["hp"] = player_data["max_hp"]
                    db.save_player(player_id, player_data)
                    
                    markup = types.InlineKeyboardMarkup()
                    markup.add(
                        types.InlineKeyboardButton("üí™ –°–∏–ª–∞", callback_data="stat_str"),
                        types.InlineKeyboardButton("üèÉ –õ–æ–≤–∫–æ—Å—Ç—å", callback_data="stat_agi"),
                        types.InlineKeyboardButton("üéØ –¢–æ—á–Ω–æ—Å—Ç—å", callback_data="stat_acc")
                    )
                    markup.add(
                        types.InlineKeyboardButton("üçÄ –£–¥–∞—á–∞", callback_data="stat_luck"),
                        types.InlineKeyboardButton("üõ°Ô∏è –ó–∞—â–∏—Ç–∞", callback_data="stat_def"),
                        types.InlineKeyboardButton("‚ù§Ô∏è –ñ–∏–≤—É—á–µ—Å—Ç—å", callback_data="stat_vit")
                    )
                    
                    bot.send_message(call.message.chat.id, 
                                   f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –¥–æ—Å—Ç–∏–≥ {player_data['level']}-–≥–æ —É—Ä–æ–≤–Ω—è!\n"
                                   "–í—ã–±–µ—Ä–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è:",
                                   reply_markup=markup)
                else:
                    bot.answer_callback_query(call.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è!")
        
        elif call.data.startswith("pvp_"):
            pvp.handle_pvp(bot, call)
        
        elif call.data.startswith("raid_"):
            raid.handle_raid(bot, call)
        
        elif call.data.startswith("guild_"):
            guild.handle_guild(bot, call)
        
        elif call.data == "find_group":
            raid.find_group(bot, call)
        
        elif call.data == "create_group":
            raid.create_group(bot, call)
        
        elif call.data == "summon_epic_boss":
            raid.summon_epic_boss(bot, call)
        
        elif call.data == "economy_auction":
            bot.answer_callback_query(call.id, "üè∑Ô∏è –ê—É–∫—Ü–∏–æ–Ω –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
        
        elif call.data == "economy_exchange":
            bot.answer_callback_query(call.id, "üí± –ë–∏—Ä–∂–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
        
        elif call.data == "economy_bank":
            bot.answer_callback_query(call.id, "üè¶ –ë–∞–Ω–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
        
        else:
            bot.answer_callback_query(call.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback: {e}")
        bot.answer_callback_query(call.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞!")

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)
