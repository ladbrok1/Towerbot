############################
### main.py - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ ###
############################
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –±–æ—Ç–∞:
- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –ë–î
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
- –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏
"""
import telebot
from telebot import types
import database as db
import player
import world
import combat
import exploration
import shop
import talent
import raid
import pvp
import economy
import guild
import leveling
import quest
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
try:
    TOKEN = "7698580548:AAGxtJRhkJBDhffYqUhJ_FtHpyMqlHEt1AA"
    bot = telebot.TeleBot(TOKEN, parse_mode='HTML')
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
    raise

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
try:
    db.init_db()
    logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
    raise

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=['start', 'help'])
def start(message):
    try:
        player.handle_start(bot, message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")
        bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã")

@bot.message_handler(func=lambda msg: msg.text == "üìä –ü–µ—Ä—Å–æ–Ω–∞–∂")
def show_character(message):
    try:
        player.show_character(bot, message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {e}")
        bot.reply_to(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –æ—Å—Ç–∞–≤–ª–µ–Ω—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –Ω–æ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫)
@bot.message_handler(func=lambda msg: msg.text == "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
def show_inventory(message):
    player.show_inventory(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "‚öîÔ∏è –ê—Ç–∞–∫–æ–≤–∞—Ç—å –º–æ–±–∞")
def fight_monster(message):
    combat.initiate_combat(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üèÉ‚Äç‚ôÇÔ∏è –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å")
def explore_location(message):
    exploration.explore(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üëë –ê—Ç–∞–∫–æ–≤–∞—Ç—å –±–æ—Å—Å–∞")
def attack_boss(message):
    raid.attack_boss(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üõí –ú–∞–≥–∞–∑–∏–Ω")
def shop_menu(message):
    shop.shop_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üîß –¢–∞–ª–∞–Ω—Ç—ã")
def show_talents(message):
    talent.show_talents(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üë• –†–µ–π–¥—ã")
def raid_menu(message):
    raid.raid_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "‚öîÔ∏è PvP")
def pvp_menu(message):
    pvp.pvp_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üè¶ –≠–∫–æ–Ω–æ–º–∏–∫–∞")
def economy_menu(message):
    economy.economy_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üè∞ –ì–∏–ª—å–¥–∏—è")
def guild_menu(message):
    guild.guild_menu(bot, message)

@bot.message_handler(func=lambda msg: msg.text == "üìú –ö–≤–µ—Å—Ç—ã")
def quests_menu(message):
    quest.show_quests(bot, message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–æ–≤ (–¥–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫)
def handle_callback_action(call, handler_func, success_msg=None):
    try:
        handler_func(bot, call)
        if success_msg:
            bot.answer_callback_query(call.id, success_msg)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback {call.data}: {e}")
        bot.answer_callback_query(call.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")

def handle_stat_call(call):
    handle_callback_action(call, player.increase_stat, "üìà –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞!")

def handle_use_item(call):
    handle_callback_action(call, player.use_item, "üéØ –ü—Ä–µ–¥–º–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω!")

def handle_buy_item(call):
    handle_callback_action(call, shop.buy_item)

def handle_sell_artifact(call):
    handle_callback_action(call, player.sell_artifact, "üí∞ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç –ø—Ä–æ–¥–∞–Ω!")
    shop.shop_menu(bot, call.message)

def handle_blacksmith(call):
    handle_callback_action(call, shop.blacksmith_menu)

def handle_craft_item(call):
    handle_callback_action(call, shop.craft_item, "üî® –ü—Ä–µ–¥–º–µ—Ç —Å–æ–∑–¥–∞–Ω!")

def handle_upgrade_weapon(call):
    handle_callback_action(call, shop.upgrade_weapon, "‚ö° –û—Ä—É–∂–∏–µ —É–ª—É—á—à–µ–Ω–æ!")

def handle_learn_talent(call):
    handle_callback_action(call, talent.learn_talent, "üß† –¢–∞–ª–∞–Ω—Ç –∏–∑—É—á–µ–Ω!")

def handle_reset_talents(call):
    handle_callback_action(call, talent.reset_talents, "üîÑ –¢–∞–ª–∞–Ω—Ç—ã —Å–±—Ä–æ—à–µ–Ω—ã!")

def handle_level_up(call):
    handle_callback_action(call, leveling.handle_level_up)

def handle_pvp(call):
    handle_callback_action(call, pvp.handle_pvp)

def handle_raid(call):
    handle_callback_action(call, raid.handle_raid)

def handle_guild(call):
    handle_callback_action(call, guild.handle_guild)

def handle_find_group(call):
    handle_callback_action(call, raid.find_group)

def handle_create_group(call):
    handle_callback_action(call, raid.create_group)

def handle_summon_boss(call):
    handle_callback_action(call, raid.summon_epic_boss)

def handle_quest(call):
    handle_callback_action(call, quest.handle_quest_action)

# –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–æ–≤
@bot.callback_query_handler(func=lambda call: True)
def handle_callbacks(call):
    try:
        callback_actions = {
            "stat_": handle_stat_call,
            "use_": handle_use_item,
            "buy_": handle_buy_item,
            "sell_artifact": handle_sell_artifact,
            "blacksmith": handle_blacksmith,
            "craft_": handle_craft_item,
            "upgrade_": handle_upgrade_weapon,
            "learn_": handle_learn_talent,
            "reset_talents": handle_reset_talents,
            "level_up": handle_level_up,
            "pvp_": handle_pvp,
            "raid_": handle_raid,
            "guild_": handle_guild,
            "find_group": handle_find_group,
            "create_group": handle_create_group,
            "summon_epic_boss": handle_summon_boss,
            "quest_": handle_quest,
            "economy_auction": lambda c: bot.answer_callback_query(c.id, "üè∑Ô∏è –ê—É–∫—Ü–∏–æ–Ω –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!"),
            "economy_exchange": lambda c: bot.answer_callback_query(c.id, "üí± –ë–∏—Ä–∂–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!"),
            "economy_bank": lambda c: bot.answer_callback_query(c.id, "üè¶ –ë–∞–Ω–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!"),
            "melt_items": lambda c: bot.answer_callback_query(c.id, "üî• –ü–ª–∞–≤–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
        }
        
        for prefix, action in callback_actions.items():
            if call.data.startswith(prefix) or call.data == prefix:
                action(call)
                return
        
        bot.answer_callback_query(call.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")

    except Exception as e:
        logger.error(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ callback: {e}")
        bot.answer_callback_query(call.id, "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞!")

if __name__ == "__main__":
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    try:
        bot.polling(none_stop=True, interval=1, timeout=30)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
